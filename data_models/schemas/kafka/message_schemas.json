{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Market Scanning Engine Kafka Message Schemas",
  "description": "Avro-compatible schemas for real-time data streaming",
  "version": "1.0",
  
  "schemas": {
    "market_data_update": {
      "type": "record",
      "name": "MarketDataUpdate",
      "namespace": "com.marketscanningengine.marketdata",
      "doc": "Real-time market data price and volume updates",
      "fields": [
        {
          "name": "asset_id",
          "type": "string",
          "doc": "UUID of the asset"
        },
        {
          "name": "symbol",
          "type": "string",
          "doc": "Asset trading symbol"
        },
        {
          "name": "timestamp",
          "type": "long",
          "logicalType": "timestamp-millis",
          "doc": "Update timestamp in milliseconds since epoch"
        },
        {
          "name": "price_cents",
          "type": "long",
          "doc": "Current price in cents"
        },
        {
          "name": "bid_price_cents",
          "type": ["null", "long"],
          "default": null,
          "doc": "Current bid price in cents"
        },
        {
          "name": "ask_price_cents",
          "type": ["null", "long"],
          "default": null,
          "doc": "Current ask price in cents"
        },
        {
          "name": "bid_size",
          "type": ["null", "int"],
          "default": null,
          "doc": "Current bid size"
        },
        {
          "name": "ask_size",
          "type": ["null", "int"],
          "default": null,
          "doc": "Current ask size"
        },
        {
          "name": "volume",
          "type": "long",
          "doc": "Current session volume"
        },
        {
          "name": "volume_delta",
          "type": "long",
          "doc": "Volume change since last update"
        },
        {
          "name": "price_change_cents",
          "type": "long",
          "doc": "Price change from previous close in cents"
        },
        {
          "name": "price_change_pct",
          "type": "int",
          "doc": "Price change percentage (scaled by 10000, e.g., 5.25% = 52500)"
        },
        {
          "name": "data_source",
          "type": "string",
          "doc": "Data provider identifier"
        },
        {
          "name": "exchange",
          "type": "string",
          "doc": "Exchange identifier"
        },
        {
          "name": "market_status",
          "type": {
            "type": "enum",
            "name": "MarketStatus",
            "symbols": ["PRE_MARKET", "MARKET_OPEN", "POST_MARKET", "CLOSED"]
          },
          "doc": "Current market session status"
        }
      ]
    },

    "signal_generated": {
      "type": "record",
      "name": "SignalGenerated",
      "namespace": "com.marketscanningengine.signals",
      "doc": "New trading signal generated by the system",
      "fields": [
        {
          "name": "signal_id",
          "type": "string",
          "doc": "UUID of the signal"
        },
        {
          "name": "asset_id",
          "type": "string",
          "doc": "UUID of the target asset"
        },
        {
          "name": "symbol",
          "type": "string",
          "doc": "Asset trading symbol"
        },
        {
          "name": "signal_name",
          "type": "string",
          "doc": "Human-readable signal name"
        },
        {
          "name": "signal_type",
          "type": "string",
          "doc": "Signal type identifier"
        },
        {
          "name": "direction",
          "type": {
            "type": "enum",
            "name": "SignalDirection",
            "symbols": ["BUY", "SELL", "HOLD"]
          },
          "doc": "Signal direction"
        },
        {
          "name": "generated_at",
          "type": "long",
          "logicalType": "timestamp-millis",
          "doc": "Signal generation timestamp"
        },
        {
          "name": "valid_until",
          "type": ["null", "long"],
          "logicalType": "timestamp-millis",
          "default": null,
          "doc": "Signal expiration timestamp"
        },
        {
          "name": "risk_score",
          "type": "int",
          "doc": "Risk score (0-100)"
        },
        {
          "name": "profit_potential_score",
          "type": "int",
          "doc": "Profit potential score (0-100)"
        },
        {
          "name": "confidence_score",
          "type": "int",
          "doc": "Confidence score (0-100)"
        },
        {
          "name": "entry_price_cents",
          "type": ["null", "long"],
          "default": null,
          "doc": "Recommended entry price in cents"
        },
        {
          "name": "target_price_cents",
          "type": ["null", "long"],
          "default": null,
          "doc": "Target price in cents"
        },
        {
          "name": "stop_loss_price_cents",
          "type": ["null", "long"],
          "default": null,
          "doc": "Stop loss price in cents"
        },
        {
          "name": "recommended_position_size_pct",
          "type": ["null", "int"],
          "default": null,
          "doc": "Recommended position size percentage (scaled by 100)"
        },
        {
          "name": "signal_strength",
          "type": {
            "type": "enum",
            "name": "SignalStrength",
            "symbols": ["WEAK", "MODERATE", "STRONG", "VERY_STRONG"]
          },
          "doc": "Signal strength classification"
        },
        {
          "name": "signal_source",
          "type": "string",
          "doc": "Algorithm/model that generated the signal"
        },
        {
          "name": "asset_class",
          "type": "string",
          "doc": "Asset class category"
        },
        {
          "name": "sector",
          "type": ["null", "string"],
          "default": null,
          "doc": "Asset sector"
        },
        {
          "name": "factors",
          "type": {
            "type": "array",
            "items": {
              "type": "record",
              "name": "SignalFactor",
              "fields": [
                {
                  "name": "factor_name",
                  "type": "string"
                },
                {
                  "name": "contribution_score",
                  "type": "int",
                  "doc": "Factor contribution (0-100)"
                },
                {
                  "name": "weight",
                  "type": "int",
                  "doc": "Factor weight (scaled by 10000)"
                }
              ]
            }
          },
          "default": [],
          "doc": "Contributing factors to this signal"
        }
      ]
    },

    "signal_match_found": {
      "type": "record",
      "name": "SignalMatchFound",
      "namespace": "com.marketscanningengine.matching",
      "doc": "Signal matched to user preferences",
      "fields": [
        {
          "name": "match_id",
          "type": "string",
          "doc": "UUID of the match record"
        },
        {
          "name": "signal_id",
          "type": "string",
          "doc": "UUID of the matched signal"
        },
        {
          "name": "user_id",
          "type": "string",
          "doc": "UUID of the target user"
        },
        {
          "name": "user_external_id",
          "type": "string",
          "doc": "External user identifier"
        },
        {
          "name": "matched_at",
          "type": "long",
          "logicalType": "timestamp-millis",
          "doc": "Match timestamp"
        },
        {
          "name": "overall_match_score",
          "type": "int",
          "doc": "Overall match quality (0-100)"
        },
        {
          "name": "risk_tolerance_match",
          "type": "int",
          "doc": "Risk tolerance match score (0-100)"
        },
        {
          "name": "asset_preference_match",
          "type": "int",
          "doc": "Asset preference match score (0-100)"
        },
        {
          "name": "time_horizon_match",
          "type": "int",
          "doc": "Time horizon match score (0-100)"
        },
        {
          "name": "position_size_match",
          "type": "int",
          "doc": "Position sizing match score (0-100)"
        },
        {
          "name": "recommended_position_size_pct",
          "type": ["null", "int"],
          "default": null,
          "doc": "User-specific recommended position size (scaled by 100)"
        },
        {
          "name": "recommended_position_size_dollars_cents",
          "type": ["null", "long"],
          "default": null,
          "doc": "Recommended position size in cents"
        },
        {
          "name": "priority",
          "type": {
            "type": "enum",
            "name": "NotificationPriority",
            "symbols": ["LOW", "MEDIUM", "HIGH", "URGENT"]
          },
          "doc": "Notification priority level"
        },
        {
          "name": "expires_at",
          "type": ["null", "long"],
          "logicalType": "timestamp-millis",
          "default": null,
          "doc": "Match expiration timestamp"
        },
        {
          "name": "signal_data",
          "type": {
            "type": "record",
            "name": "EmbeddedSignal",
            "fields": [
              {
                "name": "symbol",
                "type": "string"
              },
              {
                "name": "direction",
                "type": "string"
              },
              {
                "name": "risk_score",
                "type": "int"
              },
              {
                "name": "profit_potential_score",
                "type": "int"
              },
              {
                "name": "confidence_score",
                "type": "int"
              }
            ]
          },
          "doc": "Embedded signal data for quick access"
        }
      ]
    },

    "trade_execution": {
      "type": "record",
      "name": "TradeExecution",
      "namespace": "com.marketscanningengine.trading",
      "doc": "Trade execution event",
      "fields": [
        {
          "name": "execution_id",
          "type": "string",
          "doc": "UUID of the trade execution"
        },
        {
          "name": "user_id",
          "type": "string",
          "doc": "UUID of the user"
        },
        {
          "name": "signal_id",
          "type": ["null", "string"],
          "default": null,
          "doc": "UUID of the originating signal"
        },
        {
          "name": "asset_id",
          "type": "string",
          "doc": "UUID of the traded asset"
        },
        {
          "name": "symbol",
          "type": "string",
          "doc": "Asset trading symbol"
        },
        {
          "name": "trade_type",
          "type": {
            "type": "enum",
            "name": "TradeType",
            "symbols": ["BUY", "SELL", "SELL_SHORT", "BUY_TO_COVER"]
          },
          "doc": "Type of trade"
        },
        {
          "name": "quantity",
          "type": "int",
          "doc": "Quantity traded"
        },
        {
          "name": "execution_price_cents",
          "type": "long",
          "doc": "Execution price in cents"
        },
        {
          "name": "executed_at",
          "type": "long",
          "logicalType": "timestamp-millis",
          "doc": "Execution timestamp"
        },
        {
          "name": "position_size_dollars_cents",
          "type": "long",
          "doc": "Position size in cents"
        },
        {
          "name": "commission_cents",
          "type": "long",
          "default": 0,
          "doc": "Commission paid in cents"
        },
        {
          "name": "total_fees_cents",
          "type": "long",
          "default": 0,
          "doc": "Total fees paid in cents"
        },
        {
          "name": "slippage_bps",
          "type": ["null", "int"],
          "default": null,
          "doc": "Slippage in basis points"
        },
        {
          "name": "execution_venue",
          "type": ["null", "string"],
          "default": null,
          "doc": "Execution venue"
        },
        {
          "name": "broker_name",
          "type": ["null", "string"],
          "default": null,
          "doc": "Executing broker"
        }
      ]
    },

    "position_update": {
      "type": "record",
      "name": "PositionUpdate",
      "namespace": "com.marketscanningengine.portfolio",
      "doc": "Portfolio position update event",
      "fields": [
        {
          "name": "position_id",
          "type": "string",
          "doc": "UUID of the position"
        },
        {
          "name": "user_id",
          "type": "string",
          "doc": "UUID of the position owner"
        },
        {
          "name": "asset_id",
          "type": "string",
          "doc": "UUID of the asset"
        },
        {
          "name": "symbol",
          "type": "string",
          "doc": "Asset trading symbol"
        },
        {
          "name": "update_type",
          "type": {
            "type": "enum",
            "name": "PositionUpdateType",
            "symbols": ["OPENED", "INCREASED", "DECREASED", "CLOSED", "PRICE_UPDATE"]
          },
          "doc": "Type of position update"
        },
        {
          "name": "updated_at",
          "type": "long",
          "logicalType": "timestamp-millis",
          "doc": "Update timestamp"
        },
        {
          "name": "quantity",
          "type": "int",
          "doc": "Current position quantity"
        },
        {
          "name": "quantity_change",
          "type": "int",
          "default": 0,
          "doc": "Change in quantity"
        },
        {
          "name": "average_cost_cents",
          "type": "long",
          "doc": "Average cost in cents per share"
        },
        {
          "name": "current_price_cents",
          "type": "long",
          "doc": "Current market price in cents"
        },
        {
          "name": "unrealized_pnl_cents",
          "type": "long",
          "doc": "Current unrealized P&L in cents"
        },
        {
          "name": "unrealized_pnl_pct",
          "type": "int",
          "doc": "Unrealized P&L percentage (scaled by 10000)"
        },
        {
          "name": "position_value_cents",
          "type": "long",
          "doc": "Current position value in cents"
        },
        {
          "name": "position_status",
          "type": {
            "type": "enum",
            "name": "PositionStatus",
            "symbols": ["OPEN", "CLOSED", "CLOSING"]
          },
          "doc": "Position status"
        }
      ]
    },

    "risk_alert": {
      "type": "record",
      "name": "RiskAlert",
      "namespace": "com.marketscanningengine.risk",
      "doc": "Risk management alert",
      "fields": [
        {
          "name": "alert_id",
          "type": "string",
          "doc": "UUID of the alert"
        },
        {
          "name": "alert_type",
          "type": {
            "type": "enum",
            "name": "RiskAlertType",
            "symbols": [
              "POSITION_SIZE_LIMIT",
              "DAILY_LOSS_LIMIT",
              "PORTFOLIO_VAR_BREACH",
              "CONCENTRATION_RISK",
              "LIQUIDITY_RISK",
              "MARGIN_CALL"
            ]
          },
          "doc": "Type of risk alert"
        },
        {
          "name": "severity",
          "type": {
            "type": "enum",
            "name": "AlertSeverity",
            "symbols": ["INFO", "WARNING", "CRITICAL"]
          },
          "doc": "Alert severity level"
        },
        {
          "name": "triggered_at",
          "type": "long",
          "logicalType": "timestamp-millis",
          "doc": "Alert trigger timestamp"
        },
        {
          "name": "user_id",
          "type": ["null", "string"],
          "default": null,
          "doc": "Affected user ID (null for system-wide alerts)"
        },
        {
          "name": "asset_id",
          "type": ["null", "string"],
          "default": null,
          "doc": "Affected asset ID (null for portfolio-wide alerts)"
        },
        {
          "name": "position_id",
          "type": ["null", "string"],
          "default": null,
          "doc": "Affected position ID (null if not position-specific)"
        },
        {
          "name": "current_value",
          "type": "double",
          "doc": "Current metric value that triggered the alert"
        },
        {
          "name": "threshold_value",
          "type": "double",
          "doc": "Threshold value that was breached"
        },
        {
          "name": "risk_score",
          "type": "int",
          "doc": "Current risk score (0-100)"
        },
        {
          "name": "message",
          "type": "string",
          "doc": "Human-readable alert message"
        },
        {
          "name": "suggested_actions",
          "type": {
            "type": "array",
            "items": "string"
          },
          "default": [],
          "doc": "Suggested risk mitigation actions"
        },
        {
          "name": "metadata",
          "type": {
            "type": "map",
            "values": "string"
          },
          "default": {},
          "doc": "Additional alert metadata"
        }
      ]
    },

    "market_regime_change": {
      "type": "record",
      "name": "MarketRegimeChange",
      "namespace": "com.marketscanningengine.market",
      "doc": "Market regime classification change",
      "fields": [
        {
          "name": "regime_id",
          "type": "string",
          "doc": "UUID of the regime record"
        },
        {
          "name": "change_date",
          "type": "int",
          "logicalType": "date",
          "doc": "Date of regime change"
        },
        {
          "name": "detected_at",
          "type": "long",
          "logicalType": "timestamp-millis",
          "doc": "When regime change was detected"
        },
        {
          "name": "previous_regime",
          "type": ["null", "string"],
          "default": null,
          "doc": "Previous market regime"
        },
        {
          "name": "current_regime",
          "type": "string",
          "doc": "Current market regime"
        },
        {
          "name": "volatility_regime",
          "type": {
            "type": "enum",
            "name": "VolatilityRegime",
            "symbols": ["LOW", "NORMAL", "ELEVATED", "HIGH", "EXTREME"]
          },
          "doc": "Current volatility regime"
        },
        {
          "name": "liquidity_regime",
          "type": {
            "type": "enum",
            "name": "LiquidityRegime",
            "symbols": ["ABUNDANT", "NORMAL", "TIGHT", "STRESSED"]
          },
          "doc": "Current liquidity regime"
        },
        {
          "name": "regime_confidence",
          "type": "int",
          "doc": "Confidence in regime classification (0-100)"
        },
        {
          "name": "market_stress_index",
          "type": "int",
          "doc": "Market stress index (0-100)"
        },
        {
          "name": "vix_level",
          "type": ["null", "int"],
          "default": null,
          "doc": "VIX level (scaled by 100)"
        },
        {
          "name": "supporting_indicators",
          "type": {
            "type": "map",
            "values": "double"
          },
          "default": {},
          "doc": "Supporting economic/market indicators"
        },
        {
          "name": "impact_summary",
          "type": "string",
          "doc": "Summary of expected impact on trading strategies"
        }
      ]
    },

    "news_sentiment_update": {
      "type": "record",
      "name": "NewsSentimentUpdate",
      "namespace": "com.marketscanningengine.news",
      "doc": "Real-time news sentiment analysis update",
      "fields": [
        {
          "name": "news_id",
          "type": "string",
          "doc": "UUID of the news article"
        },
        {
          "name": "published_at",
          "type": "long",
          "logicalType": "timestamp-millis",
          "doc": "News publication timestamp"
        },
        {
          "name": "processed_at",
          "type": "long",
          "logicalType": "timestamp-millis",
          "doc": "Sentiment processing timestamp"
        },
        {
          "name": "headline",
          "type": "string",
          "doc": "News headline"
        },
        {
          "name": "source",
          "type": "string",
          "doc": "News source"
        },
        {
          "name": "sentiment_score",
          "type": "int",
          "doc": "Sentiment score (0-100, 50=neutral)"
        },
        {
          "name": "sentiment_label",
          "type": {
            "type": "enum",
            "name": "SentimentLabel",
            "symbols": ["BEARISH", "NEUTRAL", "BULLISH"]
          },
          "doc": "Sentiment classification"
        },
        {
          "name": "confidence_score",
          "type": "int",
          "doc": "Analysis confidence (0-100)"
        },
        {
          "name": "importance_score",
          "type": "int",
          "doc": "News importance score (0-100)"
        },
        {
          "name": "affected_assets",
          "type": {
            "type": "array",
            "items": {
              "type": "record",
              "name": "AffectedAsset",
              "fields": [
                {
                  "name": "asset_id",
                  "type": "string"
                },
                {
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "name": "relevance_score",
                  "type": "int",
                  "doc": "Asset relevance score (0-100)"
                }
              ]
            }
          },
          "default": [],
          "doc": "Assets affected by this news"
        },
        {
          "name": "categories",
          "type": {
            "type": "array",
            "items": "string"
          },
          "default": [],
          "doc": "News categories/tags"
        },
        {
          "name": "url",
          "type": ["null", "string"],
          "default": null,
          "doc": "Original news article URL"
        }
      ]
    }
  },

  "topics": {
    "market-data-updates": {
      "description": "Real-time market data price and volume updates",
      "schema": "market_data_update",
      "partitioning": "by_symbol",
      "retention_hours": 168,
      "cleanup_policy": "delete"
    },
    "signals-generated": {
      "description": "New trading signals generated by algorithms",
      "schema": "signal_generated",
      "partitioning": "by_asset_class",
      "retention_hours": 720,
      "cleanup_policy": "delete"
    },
    "signal-matches": {
      "description": "Signals matched to user preferences",
      "schema": "signal_match_found",
      "partitioning": "by_user_id",
      "retention_hours": 168,
      "cleanup_policy": "delete"
    },
    "trade-executions": {
      "description": "Trade execution events",
      "schema": "trade_execution",
      "partitioning": "by_user_id",
      "retention_hours": 8760,
      "cleanup_policy": "compact"
    },
    "position-updates": {
      "description": "Portfolio position updates",
      "schema": "position_update",
      "partitioning": "by_user_id",
      "retention_hours": 2160,
      "cleanup_policy": "compact"
    },
    "risk-alerts": {
      "description": "Risk management alerts and warnings",
      "schema": "risk_alert",
      "partitioning": "by_severity",
      "retention_hours": 2160,
      "cleanup_policy": "delete"
    },
    "market-regime-changes": {
      "description": "Market regime classification changes",
      "schema": "market_regime_change",
      "partitioning": "single",
      "retention_hours": 17520,
      "cleanup_policy": "compact"
    },
    "news-sentiment": {
      "description": "Real-time news sentiment analysis",
      "schema": "news_sentiment_update",
      "partitioning": "by_importance",
      "retention_hours": 720,
      "cleanup_policy": "delete"
    }
  },

  "consumer_groups": {
    "signal-matching-service": {
      "topics": ["signals-generated"],
      "description": "Matches new signals to user preferences"
    },
    "notification-service": {
      "topics": ["signal-matches", "risk-alerts"],
      "description": "Sends notifications to users"
    },
    "portfolio-service": {
      "topics": ["trade-executions", "market-data-updates"],
      "description": "Updates portfolio positions and valuations"
    },
    "risk-service": {
      "topics": ["position-updates", "market-data-updates", "market-regime-changes"],
      "description": "Monitors risk metrics and generates alerts"
    },
    "analytics-service": {
      "topics": ["trade-executions", "position-updates", "signals-generated"],
      "description": "Generates performance analytics and reports"
    },
    "ml-training-service": {
      "topics": ["trade-executions", "signals-generated", "market-data-updates"],
      "description": "Collects data for machine learning model training"
    }
  }
}