# Prometheus Configuration for Market Scanning Engine
# High-performance monitoring with optimized scraping for financial data systems

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'market-scanning-production'
    datacenter: 'us-east-1'

# Rule files for alerting
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      scheme: http
      timeout: 10s
      api_version: v2

# Scraping configuration
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # Market Data Services
  - job_name: 'data-ingestion'
    static_configs:
      - targets: 
        - 'data-ingestion:8080'
    metrics_path: '/metrics'
    scrape_interval: 5s  # High frequency for real-time data
    scrape_timeout: 3s
    honor_labels: true
    params:
      format: ['prometheus']

  - job_name: 'signal-generation'
    static_configs:
      - targets:
        - 'signal-generator:8081'
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    honor_labels: true

  - job_name: 'risk-assessment'
    static_configs:
      - targets:
        - 'risk-assessment:8082'
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    honor_labels: true

  - job_name: 'notification-service'
    static_configs:
      - targets:
        - 'notification-service:8083'
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 5s

  # Infrastructure Services
  - job_name: 'kafka-exporter'
    static_configs:
      - targets:
        - 'kafka-exporter:9308'
    scrape_interval: 30s
    scrape_timeout: 10s

  - job_name: 'redis-exporter'
    static_configs:
      - targets:
        - 'redis-exporter:9121'
    scrape_interval: 30s

  - job_name: 'postgres-exporter'
    static_configs:
      - targets:
        - 'postgres-exporter:9187'
    scrape_interval: 30s
    params:
      collect[]: 
        - 'pg_stat_database'
        - 'pg_stat_user_tables'
        - 'pg_statio_user_tables'

  - job_name: 'influxdb-exporter'
    static_configs:
      - targets:
        - 'influxdb:8086'
    metrics_path: '/metrics'
    scrape_interval: 30s

  # Kubernetes cluster monitoring
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - default
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - market-scanning
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Application-specific metrics
  - job_name: 'market-data-metrics'
    static_configs:
      - targets:
        - 'data-ingestion:8080'
        - 'signal-generator:8081'
        - 'risk-assessment:8082'
    metrics_path: '/api/v1/metrics/market'
    scrape_interval: 5s  # Critical real-time metrics
    scrape_timeout: 2s
    params:
      format: ['json']
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'market_data_.*'
        target_label: 'component'
        replacement: 'market-data'

  # Financial data quality metrics
  - job_name: 'data-quality-metrics'
    static_configs:
      - targets:
        - 'data-ingestion:8080'
    metrics_path: '/api/v1/metrics/quality'
    scrape_interval: 30s
    metric_relabel_configs:
      - source_labels: [source]
        target_label: 'data_source'
      - source_labels: [__name__]
        regex: 'quality_.*'
        target_label: 'metric_type'
        replacement: 'quality'

  # Trading signals metrics
  - job_name: 'trading-signals-metrics'
    static_configs:
      - targets:
        - 'signal-generator:8081'
    metrics_path: '/api/v1/metrics/signals'
    scrape_interval: 10s
    metric_relabel_configs:
      - source_labels: [signal_type]
        target_label: 'signal_category'
      - source_labels: [__name__]
        regex: 'signal_.*'
        target_label: 'component'
        replacement: 'signals'

  # Risk management metrics
  - job_name: 'risk-metrics'
    static_configs:
      - targets:
        - 'risk-assessment:8082'
    metrics_path: '/api/v1/metrics/risk'
    scrape_interval: 15s
    metric_relabel_configs:
      - source_labels: [risk_level]
        target_label: 'risk_category'
      - source_labels: [__name__]
        regex: 'risk_.*'
        target_label: 'component'
        replacement: 'risk'

  # Custom business metrics
  - job_name: 'business-metrics'
    static_configs:
      - targets:
        - 'metrics-aggregator:9000'
    metrics_path: '/business/metrics'
    scrape_interval: 60s  # Business metrics less frequent
    honor_labels: true
    params:
      include[]:
        - 'revenue_metrics'
        - 'user_engagement'
        - 'trading_performance'

  # External service monitoring
  - job_name: 'external-apis'
    static_configs:
      - targets:
        - 'api-monitor:8090'
    metrics_path: '/external/metrics'
    scrape_interval: 60s
    metric_relabel_configs:
      - source_labels: [api_provider]
        target_label: 'provider'
      - source_labels: [__name__]
        regex: 'external_api_.*'
        target_label: 'component'
        replacement: 'external'

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d
    retention.size: 50GB
    wal-compression: true
    min-block-duration: 2h
    max-block-duration: 25h

# Web configuration
web:
  listen-address: '0.0.0.0:9090'
  external-url: 'http://prometheus:9090'
  enable-lifecycle: true
  enable-admin-api: true
  console.templates: '/etc/prometheus/consoles'
  console.libraries: '/etc/prometheus/console_libraries'
  max-connections: 512

# Query configuration for performance
query:
  max-concurrency: 20
  max-samples: 50000000
  timeout: 2m
  lookback-delta: 5m